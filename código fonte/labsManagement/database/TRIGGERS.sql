--DROP TRIGGER HISTORY_MACHINE
CREATE TRIGGER HISTORY_MACHINE 
ON MACHINE AFTER UPDATE AS
BEGIN
	
	DECLARE @OLD_MACHINE_NAME VARCHAR(15)
	DECLARE @OLD_SERIAL VARCHAR(15)
	DECLARE @OLD_HAS_MICROPHONE BIT
	DECLARE @OLD_HAS_WEBCAM BIT
	DECLARE @OLD_CPU_MODEL VARCHAR(30)
	DECLARE @OLD_MEMORY_SIZE VARCHAR(4)

	DECLARE @NEW_MACHINE_NAME VARCHAR(15)
	DECLARE @NEW_SERIAL VARCHAR(15)
	DECLARE @NEW_HAS_MICROPHONE BIT
	DECLARE @NEW_HAS_WEBCAM BIT
	DECLARE @NEW_CPU_MODEL VARCHAR(30)
	DECLARE @NEW_MEMORY_SIZE VARCHAR(4)
	
	DECLARE @FK_ID_MACHINE INT
	DECLARE @MACHINE_NAME VARCHAR(15)
	DECLARE @SERIAL VARCHAR(15)
	DECLARE @HAS_MICROPHONE BIT
	DECLARE @HAS_WEBCAM BIT
	DECLARE @CPU_MODEL VARCHAR(30)
	DECLARE @MEMORY_SIZE VARCHAR(4)

	DECLARE @FLAG BIT

	SELECT 
			@FK_ID_MACHINE = ID_MACHINE,
			@OLD_MACHINE_NAME = MACHINE_NAME,
			@OLD_SERIAL = SERIAL,
			@OLD_HAS_MICROPHONE = HAS_MICROPHONE,
			@OLD_HAS_WEBCAM = HAS_WEBCAM,
			@OLD_CPU_MODEL = CPU_MODEL,
			@OLD_MEMORY_SIZE = MEMORY_SIZE
	 FROM DELETED

	SELECT 
			@NEW_MACHINE_NAME = MACHINE_NAME,
			@NEW_SERIAL = SERIAL,
			@NEW_HAS_MICROPHONE = HAS_MICROPHONE,
			@NEW_HAS_WEBCAM = HAS_WEBCAM,
			@NEW_CPU_MODEL = CPU_MODEL,
			@NEW_MEMORY_SIZE = MEMORY_SIZE
	 FROM INSERTED

	begin
		--machine name
		if (@NEW_MACHINE_NAME != @OLD_MACHINE_NAME)
		begin
			set @MACHINE_NAME = @OLD_MACHINE_NAME
			set @FLAG = 1
		end
		else
			set @MACHINE_NAME = null

		--serial
		if (@NEW_SERIAL != @OLD_SERIAL)
		begin
			set @SERIAL = @OLD_SERIAL
			set @FLAG = 1
		end
		else
			set @SERIAL = null

		--has microphone
		if (@NEW_HAS_MICROPHONE != @OLD_HAS_MICROPHONE)
		begin
			set @HAS_MICROPHONE = @OLD_HAS_MICROPHONE
			set @FLAG = 1
		end
		else
			set @HAS_MICROPHONE = null	
		--has webcam
		if (@NEW_HAS_WEBCAM != @OLD_HAS_WEBCAM)
		begin
			set @HAS_WEBCAM = @OLD_HAS_WEBCAM
			set @FLAG = 1
		end
		else
			set @HAS_WEBCAM = null	
		--cpu model
		if (@NEW_CPU_MODEL != @OLD_CPU_MODEL)
		begin
			set @CPU_MODEL = @OLD_CPU_MODEL
			set @FLAG = 1
		end
		else
			set @CPU_MODEL = null	
		--memory size
		if (@NEW_MEMORY_SIZE != @OLD_MEMORY_SIZE)
		begin
			set @MEMORY_SIZE = @OLD_MEMORY_SIZE
			set @FLAG = 1
		end
		else
			set @MEMORY_SIZE = null	
	END

	BEGIN
		IF(@FLAG = 1)
			INSERT INTO MACHINE_HISTORY (FK_ID_MACHINE ,MACHINE_NAME,SERIAL,HAS_MICROPHONE,HAS_WEBCAM,CPU_MODEL,MEMORY_SIZE ,LOG_DATE)
			VALUES (@FK_ID_MACHINE, @MACHINE_NAME , @SERIAL , @HAS_MICROPHONE , @HAS_WEBCAM , @CPU_MODEL ,@MEMORY_SIZE , GETDATE())
	END
END

GO

--DROP TRIGGER HISTORY_LOCATION
CREATE TRIGGER HISTORY_LOCATION ON LOCATION
AFTER UPDATE
AS
BEGIN
	DECLARE @OLD_SET_BUILDING INT
	DECLARE @OLD_BUILDING INT
	DECLARE @OLD_ROOM VARCHAR(10)

	DECLARE @NEW_SET_BUILDING INT
	DECLARE @NEW_BUILDING INT
	DECLARE @NEW_ROOM VARCHAR(10)

	DECLARE @SET_BUILDING INT
	DECLARE @BUILDING INT
	DECLARE @ROOM VARCHAR(10)
	DECLARE @ID_LOCATION INT
	DECLARE @FLAG bit
	

	
	select @ID_LOCATION = ID_LOCATION, @OLD_SET_BUILDING = SET_BUILDING, @OLD_BUILDING = BUILDING, @OLD_ROOM = ROOM from deleted
	select @NEW_SET_BUILDING = SET_BUILDING, @NEW_BUILDING = BUILDING, @NEW_ROOM = ROOM from inserted

	begin
		if (@NEW_SET_BUILDING != @OLD_SET_BUILDING)
		begin
			set @SET_BUILDING = @OLD_SET_BUILDING 
			set @FLAG = 1
		end

		else
			set @SET_BUILDING = null

		if (@NEW_BUILDING != @OLD_BUILDING)
			begin
				set @BUILDING = @OLD_BUILDING
				set @FLAG = 1
			end
		else
			set @BUILDING = null

		if (@NEW_ROOM != @OLD_ROOM)
			begin
				set @ROOM = @OLD_ROOM
				set @FLAG = 1
			end
		else
			set @ROOM = null
	END

	BEGIN
		IF(@FLAG = 1)
			INSERT INTO LOCATION_HISTORY(FK_ID_LOCATION,SET_BUILDING,BUILDING,ROOM,LOG_DATE) 
			VALUES(@ID_LOCATION,@SET_BUILDING,@BUILDING,@ROOM, getdate())
	END
END

go
--DROP TRIGGER HISTORY_LAB
CREATE TRIGGER HISTORY_LAB ON LAB
AFTER UPDATE
AS
BEGIN

	DECLARE @OLD_FK_ID_LOCATION INT
	DECLARE @OLD_NAME VARCHAR(10)
	DECLARE @OLD_LAST_UPDATE DATE
	DECLARE @OLD_MODEL_MACHINE VARCHAR(30)
	DECLARE @OLD_PURCHASE_DATE DATE
	DECLARE @OLD_NUMBER_MACHINES INT
	DECLARE @OLD_IP_ADDRESS VARCHAR(16)
	DECLARE @OLD_SUBNET_MASK VARCHAR(16)
	DECLARE @OLD_GATEWAY VARCHAR(16)

	DECLARE @NEW_FK_ID_LOCATION INT
	DECLARE @NEW_NAME VARCHAR(10)
	DECLARE @NEW_LAST_UPDATE DATE
	DECLARE @NEW_MODEL_MACHINE VARCHAR(30)
	DECLARE @NEW_PURCHASE_DATE DATE
	DECLARE @NEW_NUMBER_MACHINES INT
	DECLARE @NEW_IP_ADDRESS VARCHAR(16)
	DECLARE @NEW_SUBNET_MASK VARCHAR(16)
	DECLARE @NEW_GATEWAY VARCHAR(16)

	DECLARE @FK_ID_MACHINE INT
	DECLARE @FK_ID_LOCATION INT
	DECLARE @NAME VARCHAR(10)
	DECLARE @LAST_UPDATE DATE
	DECLARE @MODEL_MACHINE VARCHAR(30)
	DECLARE @PURCHASE_DATE DATE
	DECLARE @NUMBER_MACHINES INT
	DECLARE @IP_ADDRESS VARCHAR(16)
	DECLARE @SUBNET_MASK VARCHAR(16)
	DECLARE @GATEWAY VARCHAR(16)
	DECLARE @ID_LAB INT
	
	DECLARE @FLAG bit
	
	select @ID_LAB = ID_LAB,
		   @OLD_FK_ID_LOCATION = FK_ID_LOCATION,
		   @FK_ID_MACHINE = FK_ID_MACHINE,
		   @OLD_NAME = NAME,
		   @OLD_PURCHASE_DATE = PURCHASE_DATE,
		   @OLD_LAST_UPDATE = LAST_UPDATE,
		   @OLD_MODEL_MACHINE = MODEL_MACHINE,
		   @OLD_NUMBER_MACHINES = NUMBER_MACHINES,
		   @OLD_IP_ADDRESS = IP_ADDRESS,
		   @OLD_SUBNET_MASK = SUBNET_MASK,
		   @OLD_GATEWAY = GATEWAY
				from deleted

	select  @NEW_FK_ID_LOCATION = FK_ID_LOCATION,
			@NEW_NAME = NAME,
			@NEW_NUMBER_MACHINES = NUMBER_MACHINES,
			@NEW_LAST_UPDATE = LAST_UPDATE,
			@NEW_PURCHASE_DATE = PURCHASE_DATE,
			@NEW_MODEL_MACHINE = MODEL_MACHINE,
			@NEW_IP_ADDRESS = IP_ADDRESS,
			@NEW_SUBNET_MASK = SUBNET_MASK,
			@NEW_GATEWAY = GATEWAY
				from INSERTED

	begin
		--NAME
		if (@NEW_NAME != @OLD_NAME)
		begin
			set @NAME = @OLD_NAME
			set @FLAG = 1
		end
		else
			set @NAME = null
		--FK_ID_LOCATION
		if (@OLD_FK_ID_LOCATION != @NEW_FK_ID_LOCATION)
			begin
				set @FK_ID_LOCATION = @OLD_FK_ID_LOCATION
				set @FLAG = 1
			end
		else
			set @FK_ID_LOCATION = null
		--LAST_UPDATE
		if (@OLD_LAST_UPDATE != @NEW_LAST_UPDATE)
			begin
				set @LAST_UPDATE = @OLD_LAST_UPDATE
				set @FLAG = 1
			end
		else
			set @LAST_UPDATE = null
		--MODEL_MACHINE
		if (@OLD_MODEL_MACHINE != @NEW_MODEL_MACHINE)
			begin
				set @MODEL_MACHINE = @OLD_MODEL_MACHINE
				set @FLAG = 1
			end
		else
			set @MODEL_MACHINE = null
		--PURCHASE_DATE
		if (@OLD_PURCHASE_DATE != @NEW_PURCHASE_DATE)
			begin
				set @PURCHASE_DATE = @OLD_PURCHASE_DATE
				set @FLAG = 1
			end
		else
			set @PURCHASE_DATE = null
		--NUMBER_MACHINES
		if (@OLD_NUMBER_MACHINES != @NEW_NUMBER_MACHINES)
			begin
				set @NUMBER_MACHINES = @OLD_NUMBER_MACHINES
				set @FLAG = 1
			end
		else
			set @NUMBER_MACHINES = null
		--IP_ADDDRESS
		if (@OLD_IP_ADDRESS != @NEW_IP_ADDRESS)
			begin
				set @IP_ADDRESS = @OLD_IP_ADDRESS
				set @FLAG = 1
			end
		else
			set @IP_ADDRESS = null
		--SUBNET_MASK
		if (@OLD_SUBNET_MASK != @NEW_SUBNET_MASK)
			begin
				set @SUBNET_MASK = @OLD_SUBNET_MASK
				set @FLAG = 1
			end
		else
			set @SUBNET_MASK = null
		--GATEWAY
		if (@OLD_GATEWAY != @NEW_GATEWAY)
			begin
				set @GATEWAY = @OLD_GATEWAY
				set @FLAG = 1
			end
		else
			set @GATEWAY = null
		
	END

	BEGIN
		IF(@FLAG = 1)
			INSERT INTO LAB_HISTORY(
				FK_ID_LAB,FK_ID_MACHINE,NAME,LAST_UPDATE,MODEL_MACHINE,PURCHASE_DATE,NUMBER_MACHINES,IP_ADDRESS,SUBNET_MASK,GATEWAY,LOG_DATE) 
			VALUES(	
				@ID_LAB,@FK_ID_MACHINE,@NAME,@LAST_UPDATE,@MODEL_MACHINE,@PURCHASE_DATE,@NUMBER_MACHINES,@IP_ADDRESS,@SUBNET_MASK,@GATEWAY,getdate())
	END
END

GO